{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aikid\\\\CascadeProjects\\\\chalet-fractal-flow\\\\src\\\\components\\\\KanbanBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { DndContext, PointerSensor, useSensor, useSensors, closestCenter, DragOverlay } from '@dnd-kit/core';\nimport KanbanColumn from './KanbanColumn';\nimport NewColumnModal from './NewColumnModal';\nimport RenameColumnInline from './RenameColumnInline';\nimport Breadcrumbs from './Breadcrumbs';\nimport DepthLimitModal from './DepthLimitModal';\nimport CardModal from './CardModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dummyBoard = {\n  id: 'board-1',\n  title: 'My Test Board',\n  depthLevel: 0\n};\nconst dummyColumns = [{\n  id: 'Ideas',\n  title: 'Ideas'\n}, {\n  id: 'In Progress',\n  title: 'In Progress'\n}, {\n  id: 'Completed',\n  title: 'Completed'\n}];\nconst dummyCards = []; // Start with no cards for a fresh Kanban\n\nfunction KanbanBoard() {\n  _s();\n  // Use dummy data instead of Firestore\n  const [boardData] = useState(dummyBoard);\n  const [columns, setColumns] = useState(dummyColumns);\n  const [cards, setCards] = useState(dummyCards);\n  // UI state\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDraggingCard, setIsDraggingCard] = useState(null);\n  const [breadcrumbs, setBreadcrumbs] = useState([dummyBoard]);\n  const [showDepthModal, setShowDepthModal] = useState(false);\n  const [showNewColumnModal, setShowNewColumnModal] = useState(false);\n  const [renamingColumnId, setRenamingColumnId] = useState(null);\n  const newColumnBtnRef = useRef(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [activeCard, setActiveCard] = useState(null);\n\n  // Override drag sensors (no change)\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 5\n    }\n  }));\n\n  // Handlers operate on local dummy state\n  const handleMoveCard = (card, newStatus) => {\n    setCards(c => {\n      const updatedCards = c.map(x => x.id === card.id ? {\n        ...x,\n        status: newStatus\n      } : x);\n      // Force state update by creating new array reference\n      return [...updatedCards];\n    });\n  };\n  const handleAddCard = (status, title) => {\n    const id = `card-${Date.now()}`;\n    setCards(c => [{\n      id,\n      boardId: dummyBoard.id,\n      title,\n      description: '',\n      status,\n      pinned: false,\n      hasSubBoard: false\n    }, ...c]);\n  };\n  const handleTogglePin = cardId => {\n    setCards(cardsList => cardsList.map(card => card.id === cardId ? {\n      ...card,\n      pinned: !card.pinned\n    } : card));\n    setSelectedCard(sc => (sc === null || sc === void 0 ? void 0 : sc.id) === cardId ? {\n      ...sc,\n      pinned: !sc.pinned\n    } : sc);\n  };\n  const handleUpdateTasks = (cardId, tasks) => {\n    setCards(cards => cards.map(card => card.id === cardId ? {\n      ...card,\n      tasks\n    } : card));\n    if ((selectedCard === null || selectedCard === void 0 ? void 0 : selectedCard.id) === cardId) {\n      setSelectedCard(prev => prev ? {\n        ...prev,\n        tasks\n      } : null);\n    }\n  };\n  const handleSetColor = (cardId, color) => {\n    setCards(cards => cards.map(card => card.id === cardId ? {\n      ...card,\n      color\n    } : card));\n    if ((selectedCard === null || selectedCard === void 0 ? void 0 : selectedCard.id) === cardId) {\n      setSelectedCard(prev => prev ? {\n        ...prev,\n        color\n      } : null);\n    }\n  };\n  const handleDeleteCard = cardId => {\n    setCards(cards => cards.filter(c => c.id !== cardId));\n    setSelectedCard(null);\n  };\n\n  // Handle drag end: update local state\n  const handleDragEnd = event => {\n    var _active$data$current, _over$data$current, _active$data$current2, _over$data$current2;\n    const {\n      active,\n      over\n    } = event;\n    if (!over) return;\n\n    // Check if we're moving between columns or reordering within same column\n    if (((_active$data$current = active.data.current) === null || _active$data$current === void 0 ? void 0 : _active$data$current.type) === 'card' && ((_over$data$current = over.data.current) === null || _over$data$current === void 0 ? void 0 : _over$data$current.type) === 'column') {\n      // Moving between columns\n      const newStatus = over.id;\n      const cardId = active.id;\n      const card = cards.find(c => c.id === cardId);\n      if (card) handleMoveCard(card, newStatus);\n    } else if (((_active$data$current2 = active.data.current) === null || _active$data$current2 === void 0 ? void 0 : _active$data$current2.type) === 'card' && ((_over$data$current2 = over.data.current) === null || _over$data$current2 === void 0 ? void 0 : _over$data$current2.type) === 'card') {\n      // Reordering within same column\n      const oldIndex = cards.findIndex(c => c.id === active.id);\n      const newIndex = cards.findIndex(c => c.id === over.id);\n      if (oldIndex !== -1 && newIndex !== -1 && cards[oldIndex].status === cards[newIndex].status) {\n        const newCards = [...cards];\n        const [removed] = newCards.splice(oldIndex, 1);\n        newCards.splice(newIndex, 0, removed);\n        setCards(newCards);\n      }\n    }\n  };\n\n  // No loading guard needed: dummy data is always present\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    sensors: sensors,\n    collisionDetection: closestCenter,\n    onDragStart: event => {\n      var _event$active$data$cu;\n      setIsDragging(true);\n      if (((_event$active$data$cu = event.active.data.current) === null || _event$active$data$cu === void 0 ? void 0 : _event$active$data$cu.type) === 'card') {\n        setActiveCard(event.active.data.current.card);\n        setIsDraggingCard(event.active.id);\n      }\n    },\n    onDragEnd: event => {\n      handleDragEnd(event);\n      setActiveCard(null);\n      setIsDragging(false);\n      setIsDraggingCard(null);\n    },\n    onDragCancel: () => {\n      setActiveCard(null);\n      setIsDragging(false);\n      setIsDraggingCard(null);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-background rounded-xl shadow-card p-6\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full overflow-x-auto pb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-6 flex-nowrap justify-center mx-auto min-w-fit\",\n          style: {\n            scrollbarWidth: 'thin'\n          },\n          children: [columns.map((col, idx) => {\n            const isRenaming = renamingColumnId === col.id;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-stretch\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-1 mb-1\",\n                children: isRenaming ? /*#__PURE__*/_jsxDEV(RenameColumnInline, {\n                  value: col.title,\n                  onSave: name => {\n                    if (!name.trim()) return;\n                    setColumns(cols => cols.map(c => c.id === col.id ? {\n                      ...c,\n                      title: name.trim()\n                    } : c));\n                    setRenamingColumnId(null);\n                  },\n                  onCancel: () => setRenamingColumnId(null)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"text-lg font-semibold text-gray-800 bg-transparent border-none px-0 py-0 cursor-pointer hover:underline focus:outline-accent\",\n                    onClick: () => setRenamingColumnId(col.id),\n                    tabIndex: 0,\n                    \"aria-label\": `Rename column ${col.title}`,\n                    style: {\n                      background: 'none'\n                    },\n                    children: col.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"ml-1 text-gray-400 hover:text-accent focus:text-accent p-0.5 rounded focus:outline-accent\",\n                    onClick: () => setRenamingColumnId(col.id),\n                    tabIndex: 0,\n                    \"aria-label\": `Edit column ${col.title}`,\n                    style: {\n                      background: 'none'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"16\",\n                      height: \"16\",\n                      viewBox: \"0 0 20 20\",\n                      fill: \"none\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M4 13.5V16h2.5l7.06-7.06-2.5-2.5L4 13.5zm10.71-6.29c.19-.19.29-.44.29-.71s-.1-.52-.29-.71l-1.5-1.5a1.003 1.003 0 00-1.42 0l-1.13 1.13 2.5 2.5 1.13-1.13z\",\n                        fill: \"currentColor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 87\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n                columnId: col.id,\n                title: col.title,\n                cards: cards.filter(c => c.status === col.id),\n                onCardClick: card => {\n                  if (card.hasSubBoard && card.subBoardId) {\n                    if (boardData && boardData.depthLevel >= 3) {\n                      setShowDepthModal(true);\n                    } else {\n                      // Do nothing for now\n                    }\n                  } else {\n                    setSelectedCard(card);\n                  }\n                },\n                onMoveCard: handleMoveCard,\n                onAddCard: title => handleAddCard(col.id, title),\n                isDragging: isDragging,\n                setIsDragging: setIsDragging,\n                isDraggingCard: isDraggingCard,\n                columns: columns\n              }, col.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, col.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center justify-center min-w-[160px]\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              ref: newColumnBtnRef,\n              className: \"flex items-center gap-2 px-4 py-2 rounded border border-gray-200 bg-gray-50 text-gray-400 hover:text-accent hover:border-accent transition-colors focus:outline-accent focus:ring-2 focus:ring-accent/30 text-base font-medium mt-8 mb-2\",\n              style: {\n                minHeight: 44\n              },\n              onClick: () => setShowNewColumnModal(true),\n              tabIndex: 0,\n              \"aria-label\": \"Add new column\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"20\",\n                height: \"20\",\n                fill: \"none\",\n                viewBox: \"0 0 20 20\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"10\",\n                  cy: \"10\",\n                  r: \"9\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 77\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M10 6v8M6 10h8\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 146\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"New Column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewColumnModal, {\n            open: showNewColumnModal,\n            onClose: () => setShowNewColumnModal(false),\n            onCreate: name => {\n              if (!name.trim()) return;\n              // Generate unique id based on name and timestamp\n              const id = name.trim().replace(/\\s+/g, '-') + '-' + Date.now();\n              setColumns(cols => [...cols, {\n                id,\n                title: name.trim()\n              }]);\n              setShowNewColumnModal(false);\n              setTimeout(() => {\n                var _newColumnBtnRef$curr;\n                return (_newColumnBtnRef$curr = newColumnBtnRef.current) === null || _newColumnBtnRef$curr === void 0 ? void 0 : _newColumnBtnRef$curr.focus();\n              }, 100);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), selectedCard ? /*#__PURE__*/_jsxDEV(CardModal, {\n        card: selectedCard,\n        onClose: () => setSelectedCard(null),\n        onTogglePin: handleTogglePin,\n        onUpdateTasks: handleUpdateTasks,\n        onSetColor: color => handleSetColor(selectedCard.id, color),\n        onDelete: () => handleDeleteCard(selectedCard.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(DepthLimitModal, {\n        open: showDepthModal,\n        onCancel: () => setShowDepthModal(false),\n        onConfirm: () => setShowDepthModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragOverlay, {\n        children: activeCard ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-card rounded-card shadow-lg px-4 py-3 border-l-4 border-accent bg-white opacity-90 transform scale-105\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-gray-800\",\n            children: activeCard.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"3imoZqNZX32rYj8n3ACqZ31dQxQ=\", false, function () {\n  return [useSensors, useSensor];\n});\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useRef","DndContext","PointerSensor","useSensor","useSensors","closestCenter","DragOverlay","KanbanColumn","NewColumnModal","RenameColumnInline","Breadcrumbs","DepthLimitModal","CardModal","jsxDEV","_jsxDEV","Fragment","_Fragment","dummyBoard","id","title","depthLevel","dummyColumns","dummyCards","KanbanBoard","_s","boardData","columns","setColumns","cards","setCards","isDragging","setIsDragging","isDraggingCard","setIsDraggingCard","breadcrumbs","setBreadcrumbs","showDepthModal","setShowDepthModal","showNewColumnModal","setShowNewColumnModal","renamingColumnId","setRenamingColumnId","newColumnBtnRef","selectedCard","setSelectedCard","activeCard","setActiveCard","sensors","activationConstraint","distance","handleMoveCard","card","newStatus","c","updatedCards","map","x","status","handleAddCard","Date","now","boardId","description","pinned","hasSubBoard","handleTogglePin","cardId","cardsList","sc","handleUpdateTasks","tasks","prev","handleSetColor","color","handleDeleteCard","filter","handleDragEnd","event","_active$data$current","_over$data$current","_active$data$current2","_over$data$current2","active","over","data","current","type","find","oldIndex","findIndex","newIndex","newCards","removed","splice","collisionDetection","onDragStart","_event$active$data$cu","onDragEnd","onDragCancel","children","className","path","fileName","_jsxFileName","lineNumber","columnNumber","style","scrollbarWidth","col","idx","isRenaming","value","onSave","name","trim","cols","onCancel","onClick","tabIndex","background","width","height","viewBox","fill","d","columnId","onCardClick","subBoardId","onMoveCard","onAddCard","ref","minHeight","cx","cy","r","stroke","strokeWidth","strokeLinecap","open","onClose","onCreate","replace","setTimeout","_newColumnBtnRef$curr","focus","onTogglePin","onUpdateTasks","onSetColor","onDelete","onConfirm","_c","$RefreshReg$"],"sources":["C:/Users/aikid/CascadeProjects/chalet-fractal-flow/src/components/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { TaskData } from './CardModal';\nimport {\n  DndContext,\n  PointerSensor,\n  useSensor,\n  useSensors,\n  closestCenter,\n  DragEndEvent,\n  DragOverlay,\n} from '@dnd-kit/core';\nimport { verticalListSortingStrategy } from '@dnd-kit/sortable';\n\nimport KanbanColumn from './KanbanColumn';\nimport NewColumnModal from './NewColumnModal';\nimport RenameColumnInline from './RenameColumnInline';\nimport Breadcrumbs from './Breadcrumbs';\nimport DepthLimitModal from './DepthLimitModal';\nimport CardModal from './CardModal';\nimport LoadingScreen from './LoadingScreen';\n\nexport interface CardData {\n  id: string;\n  boardId: string;\n  title: string;\n  description: string;\n  status: string;\n  pinned: boolean;\n  dueDate?: string;\n  hasSubBoard: boolean;\n  subBoardId?: string;\n  color?: string; // pastel color key\n  tasks?: TaskData[];\n}\n\nexport interface BoardState {\n  id: string;\n  title: string;\n  parentBoardId?: string;\n  depthLevel: number;\n}\n\nconst dummyBoard: BoardState = { id: 'board-1', title: 'My Test Board', depthLevel: 0 };\nconst dummyColumns: Array<{ id: string; title: string }> = [\n  { id: 'Ideas', title: 'Ideas' },\n  { id: 'In Progress', title: 'In Progress' },\n  { id: 'Completed', title: 'Completed' },\n];\nconst dummyCards: CardData[] = []; // Start with no cards for a fresh Kanban\n\nfunction KanbanBoard() {\n  // Use dummy data instead of Firestore\n  const [boardData] = useState<BoardState>(dummyBoard);\n  const [columns, setColumns] = useState(dummyColumns);\n  const [cards, setCards] = useState<CardData[]>(dummyCards);\n  // UI state\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDraggingCard, setIsDraggingCard] = useState<string | null>(null);\n  const [breadcrumbs, setBreadcrumbs] = useState<BoardState[]>([dummyBoard]);\n  const [showDepthModal, setShowDepthModal] = useState(false);\n  const [showNewColumnModal, setShowNewColumnModal] = useState(false);\n  const [renamingColumnId, setRenamingColumnId] = useState<string | null>(null);\n  const newColumnBtnRef = useRef<HTMLButtonElement>(null);\n  const [selectedCard, setSelectedCard] = useState<CardData | null>(null);\n  const [activeCard, setActiveCard] = useState<CardData | null>(null);\n\n  // Override drag sensors (no change)\n  const sensors = useSensors(\n    useSensor(PointerSensor, { activationConstraint: { distance: 5 } })\n  );\n\n  // Handlers operate on local dummy state\n  const handleMoveCard = (card: CardData, newStatus: string) => {\n    setCards(c => {\n      const updatedCards = c.map(x => x.id === card.id ? { ...x, status: newStatus } : x);\n      // Force state update by creating new array reference\n      return [...updatedCards];\n    });\n  };\n  const handleAddCard = (status: string, title: string) => {\n    const id = `card-${Date.now()}`;\n    setCards(c => [{ id, boardId: dummyBoard.id, title, description: '', status, pinned: false, hasSubBoard: false }, ...c]);\n  };\n  const handleTogglePin = (cardId: string) => {\n    setCards(cardsList => cardsList.map(card => card.id === cardId ? { ...card, pinned: !card.pinned } : card));\n    setSelectedCard(sc => sc?.id === cardId ? { ...sc, pinned: !sc.pinned } : sc);\n  };\n\n  const handleUpdateTasks = (cardId: string, tasks: TaskData[]) => {\n    setCards(cards => cards.map(card => \n      card.id === cardId ? { ...card, tasks } : card\n    ));\n    if (selectedCard?.id === cardId) {\n      setSelectedCard(prev => prev ? { ...prev, tasks } : null);\n    }\n  };\n\n  const handleSetColor = (cardId: string, color: string) => {\n    setCards(cards => cards.map(card => \n      card.id === cardId ? { ...card, color } : card\n    ));\n    if (selectedCard?.id === cardId) {\n      setSelectedCard(prev => prev ? { ...prev, color } : null);\n    }\n  };\n\n  const handleDeleteCard = (cardId: string) => {\n    setCards(cards => cards.filter(c => c.id !== cardId));\n    setSelectedCard(null);\n  };\n\n  // Handle drag end: update local state\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event;\n    if (!over) return;\n    \n    // Check if we're moving between columns or reordering within same column\n    if (active.data.current?.type === 'card' && over.data.current?.type === 'column') {\n      // Moving between columns\n      const newStatus = over.id as string;\n      const cardId = active.id as string;\n      const card = cards.find(c => c.id === cardId);\n      if (card) handleMoveCard(card, newStatus);\n    } else if (active.data.current?.type === 'card' && over.data.current?.type === 'card') {\n      // Reordering within same column\n      const oldIndex = cards.findIndex(c => c.id === active.id);\n      const newIndex = cards.findIndex(c => c.id === over.id);\n      \n      if (oldIndex !== -1 && newIndex !== -1 && cards[oldIndex].status === cards[newIndex].status) {\n        const newCards = [...cards];\n        const [removed] = newCards.splice(oldIndex, 1);\n        newCards.splice(newIndex, 0, removed);\n        setCards(newCards);\n      }\n    }\n  };\n\n  // No loading guard needed: dummy data is always present\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={event => {\n        setIsDragging(true);\n        if (event.active.data.current?.type === 'card') {\n          setActiveCard(event.active.data.current.card);\n          setIsDraggingCard(event.active.id as string);\n        }\n      }}\n      onDragEnd={(event) => {\n        handleDragEnd(event);\n        setActiveCard(null);\n        setIsDragging(false);\n        setIsDraggingCard(null);\n      }}\n      onDragCancel={() => {\n        setActiveCard(null);\n        setIsDragging(false);\n        setIsDraggingCard(null);\n      }}\n    >\n      <div className=\"bg-background rounded-xl shadow-card p-6\">\n        <Breadcrumbs path={breadcrumbs} />\n        <div className=\"w-full overflow-x-auto pb-4\">\n          <div className=\"flex gap-6 flex-nowrap justify-center mx-auto min-w-fit\" style={{scrollbarWidth: 'thin'}}>\n\n            {columns.map((col: { id: string; title: string }, idx: number) => {\n              const isRenaming = renamingColumnId === col.id;\n              return (\n                <div key={col.id} className=\"flex flex-col items-stretch\">\n                  <div className=\"flex items-center gap-1 mb-1\">\n                    {isRenaming ? (\n                      <RenameColumnInline\n                        value={col.title}\n                        onSave={(name: string) => {\n                          if (!name.trim()) return;\n                          setColumns(cols => cols.map(c => c.id === col.id ? { ...c, title: name.trim() } : c));\n                          setRenamingColumnId(null);\n                        }}\n                        onCancel={() => setRenamingColumnId(null)}\n                      />\n                    ) : (\n                      <>\n                        <button\n                          className=\"text-lg font-semibold text-gray-800 bg-transparent border-none px-0 py-0 cursor-pointer hover:underline focus:outline-accent\"\n                          onClick={() => setRenamingColumnId(col.id)}\n                          tabIndex={0}\n                          aria-label={`Rename column ${col.title}`}\n                          style={{ background: 'none' }}\n                        >\n                          {col.title}\n                        </button>\n                        <button\n                          className=\"ml-1 text-gray-400 hover:text-accent focus:text-accent p-0.5 rounded focus:outline-accent\"\n                          onClick={() => setRenamingColumnId(col.id)}\n                          tabIndex={0}\n                          aria-label={`Edit column ${col.title}`}\n                          style={{ background: 'none' }}\n                        >\n                          <svg width=\"16\" height=\"16\" viewBox=\"0 0 20 20\" fill=\"none\"><path d=\"M4 13.5V16h2.5l7.06-7.06-2.5-2.5L4 13.5zm10.71-6.29c.19-.19.29-.44.29-.71s-.1-.52-.29-.71l-1.5-1.5a1.003 1.003 0 00-1.42 0l-1.13 1.13 2.5 2.5 1.13-1.13z\" fill=\"currentColor\"/></svg>\n                        </button>\n                      </>\n                    )}\n                  </div>\n                  <KanbanColumn\n                    key={col.id}\n                    columnId={col.id}\n                    title={col.title}\n                    cards={cards.filter((c: CardData) => c.status === col.id)}\n                    onCardClick={(card: CardData) => {\n                      if (card.hasSubBoard && card.subBoardId) {\n                        if (boardData && boardData.depthLevel >= 3) {\n                          setShowDepthModal(true);\n                        } else {\n                          // Do nothing for now\n                        }\n                      } else {\n                        setSelectedCard(card);\n                      }\n                    }}\n                    onMoveCard={handleMoveCard}\n                    onAddCard={(title: string) => handleAddCard(col.id, title)}\n                    isDragging={isDragging}\n                    setIsDragging={setIsDragging}\n                    isDraggingCard={isDraggingCard}\n                    columns={columns}\n                  />\n                </div>\n              );\n            })}\n            {/* New Column Button */}\n            <div className=\"flex flex-col items-center justify-center min-w-[160px]\">\n              <button\n                ref={newColumnBtnRef}\n                className=\"flex items-center gap-2 px-4 py-2 rounded border border-gray-200 bg-gray-50 text-gray-400 hover:text-accent hover:border-accent transition-colors focus:outline-accent focus:ring-2 focus:ring-accent/30 text-base font-medium mt-8 mb-2\"\n                style={{ minHeight: 44 }}\n                onClick={() => setShowNewColumnModal(true)}\n                tabIndex={0}\n                aria-label=\"Add new column\"\n              >\n                <svg width=\"20\" height=\"20\" fill=\"none\" viewBox=\"0 0 20 20\"><circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"currentColor\" strokeWidth=\"2\"/><path d=\"M10 6v8M6 10h8\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/></svg>\n                <span>New Column</span>\n              </button>\n            </div>\n            {/* Modal for new column */}\n            <NewColumnModal\n              open={showNewColumnModal}\n              onClose={() => setShowNewColumnModal(false)}\n              onCreate={(name: string) => {\n                if (!name.trim()) return;\n                // Generate unique id based on name and timestamp\n                const id = name.trim().replace(/\\s+/g, '-') + '-' + Date.now();\n                setColumns(cols => [...cols, { id, title: name.trim() }]);\n                setShowNewColumnModal(false);\n                setTimeout(() => newColumnBtnRef.current?.focus(), 100);\n              }}\n            />\n          </div>\n        </div>\n        {selectedCard ? (\n          <CardModal \n            card={selectedCard} \n            onClose={() => setSelectedCard(null)} \n            onTogglePin={handleTogglePin}\n            onUpdateTasks={handleUpdateTasks}\n            onSetColor={(color: string) => handleSetColor(selectedCard.id, color)}\n            onDelete={() => handleDeleteCard(selectedCard.id)}\n          />\n        ) : null}\n        <DepthLimitModal\n          open={showDepthModal}\n          onCancel={() => setShowDepthModal(false)}\n          onConfirm={() => setShowDepthModal(false)}\n        />\n        <DragOverlay>\n          {activeCard ? (\n            <div className=\"kanban-card rounded-card shadow-lg px-4 py-3 border-l-4 border-accent bg-white opacity-90 transform scale-105\">\n              <div className=\"font-medium text-gray-800\">{activeCard.title}</div>\n            </div>\n          ) : null}\n        </DragOverlay>\n      </div>\n    </DndContext>\n  );\n}\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}