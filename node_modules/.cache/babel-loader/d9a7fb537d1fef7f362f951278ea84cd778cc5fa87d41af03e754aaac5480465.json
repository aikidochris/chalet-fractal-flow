{"ast":null,"code":"/**\n * useCardProgress - React hook for live card progress (percent and total tasks)\n * @param tasks TaskData[] - Array of tasks for the card\n * @returns { progress, tasksCount }\n */\nexport function useCardProgress(tasks) {\n  const tasksCount = tasks.length;\n  const completedCount = tasks.filter(task => task.completed).length;\n  const progress = tasksCount > 0 ? Math.round(completedCount / tasksCount * 100) : 0;\n  return {\n    progress,\n    tasksCount\n  };\n}","map":{"version":3,"names":["useCardProgress","tasks","tasksCount","length","completedCount","filter","task","completed","progress","Math","round"],"sources":["C:/Users/aikid/CascadeProjects/chalet-fractal-flow/src/components/useCardProgress.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport type { TaskData } from './CardModal';\n\n/**\n * useCardProgress - React hook for live card progress (percent and total tasks)\n * @param tasks TaskData[] - Array of tasks for the card\n * @returns { progress, tasksCount }\n */\nexport function useCardProgress(tasks: TaskData[]): { progress: number; tasksCount: number } {\n  const tasksCount = tasks.length;\n  const completedCount = tasks.filter(task => task.completed).length;\n  const progress = tasksCount > 0 ? Math.round((completedCount / tasksCount) * 100) : 0;\n\n  return { progress, tasksCount };\n}\n"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,eAAeA,CAACC,KAAiB,EAA4C;EAC3F,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM;EAC/B,MAAMC,cAAc,GAAGH,KAAK,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC,CAACJ,MAAM;EAClE,MAAMK,QAAQ,GAAGN,UAAU,GAAG,CAAC,GAAGO,IAAI,CAACC,KAAK,CAAEN,cAAc,GAAGF,UAAU,GAAI,GAAG,CAAC,GAAG,CAAC;EAErF,OAAO;IAAEM,QAAQ;IAAEN;EAAW,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}