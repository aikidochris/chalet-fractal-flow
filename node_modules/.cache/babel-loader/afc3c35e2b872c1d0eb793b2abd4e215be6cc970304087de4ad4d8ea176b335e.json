{"ast":null,"code":"import React,{useState,useRef}from'react';import{DndContext,PointerSensor,useSensor,useSensors,closestCenter}from'@dnd-kit/core';import KanbanColumn from'./KanbanColumn';import NewColumnModal from'./NewColumnModal';import RenameColumnInline from'./RenameColumnInline';import Breadcrumbs from'./Breadcrumbs';import DepthLimitModal from'./DepthLimitModal';import CardModal from'./CardModal';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const dummyBoard={id:'board-1',title:'My Test Board',depthLevel:0};const dummyColumns=[{id:'Ideas',title:'Ideas'},{id:'In Progress',title:'In Progress'},{id:'Completed',title:'Completed'}];const dummyCards=[{id:'card-1',boardId:'board-1',title:'First Idea',description:'',status:'Ideas',pinned:false,hasSubBoard:false},{id:'card-2',boardId:'board-1',title:'Doing This Now',description:'',status:'In Progress',pinned:true,hasSubBoard:false},{id:'card-3',boardId:'board-1',title:'Done!',description:'',status:'Completed',pinned:false,hasSubBoard:false}];function KanbanBoard(){// Use dummy data instead of Firestore\nconst[boardData]=useState(dummyBoard);const[columns,setColumns]=useState(dummyColumns);const[cards,setCards]=useState(dummyCards);// UI state\nconst[isDragging,setIsDragging]=useState(false);const[isDraggingCard,setIsDraggingCard]=useState(null);const[breadcrumbs,setBreadcrumbs]=useState([dummyBoard]);const[showDepthModal,setShowDepthModal]=useState(false);const[showNewColumnModal,setShowNewColumnModal]=useState(false);const[renamingColumnId,setRenamingColumnId]=useState(null);const newColumnBtnRef=useRef(null);const[selectedCard,setSelectedCard]=useState(null);// Override drag sensors (no change)\nconst sensors=useSensors(useSensor(PointerSensor,{activationConstraint:{distance:5}}));// Handlers operate on local dummy state\nconst handleMoveCard=(card,newStatus)=>{setCards(c=>c.map(x=>x.id===card.id?{...x,status:newStatus}:x));};const handleAddCard=(status,title)=>{const id=`card-${Date.now()}`;setCards(c=>[...c,{id,boardId:dummyBoard.id,title,description:'',status,pinned:false,hasSubBoard:false}]);};// Handle drag end: update local state\nconst handleDragEnd=event=>{const{active,over}=event;if(!over)return;const newStatus=over.id;const cardId=active.id;if(columns.some(c=>c.id===newStatus)){const card=cards.find(c=>c.id===cardId);if(card&&card.status!==newStatus){handleMoveCard(card,newStatus);}}};// No loading guard needed: dummy data is always present\nreturn/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragStart:event=>{setIsDragging(true);if(event&&event.active&&event.active.id){setIsDraggingCard(String(event.active.id));}},onDragEnd:event=>{setIsDragging(false);setIsDraggingCard(null);handleDragEnd(event);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-background rounded-xl shadow-card p-6\",children:[/*#__PURE__*/_jsx(Breadcrumbs,{path:breadcrumbs}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full overflow-x-auto pb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-6 flex-nowrap justify-center mx-auto min-w-fit\",style:{scrollbarWidth:'thin'},children:[columns.map((col,idx)=>{const isRenaming=renamingColumnId===col.id;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-stretch\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center gap-1 mb-1\",children:isRenaming?/*#__PURE__*/_jsx(RenameColumnInline,{value:col.title,onSave:name=>{if(!name.trim())return;setColumns(cols=>cols.map(c=>c.id===col.id?{...c,title:name.trim()}:c));setRenamingColumnId(null);},onCancel:()=>setRenamingColumnId(null)}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"text-lg font-semibold text-gray-800 bg-transparent border-none px-0 py-0 cursor-pointer hover:underline focus:outline-accent\",onClick:()=>setRenamingColumnId(col.id),tabIndex:0,\"aria-label\":`Rename column ${col.title}`,style:{background:'none'},children:col.title}),/*#__PURE__*/_jsx(\"button\",{className:\"ml-1 text-gray-400 hover:text-accent focus:text-accent p-0.5 rounded focus:outline-accent\",onClick:()=>setRenamingColumnId(col.id),tabIndex:0,\"aria-label\":`Edit column ${col.title}`,style:{background:'none'},children:/*#__PURE__*/_jsx(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 20 20\",fill:\"none\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M4 13.5V16h2.5l7.06-7.06-2.5-2.5L4 13.5zm10.71-6.29c.19-.19.29-.44.29-.71s-.1-.52-.29-.71l-1.5-1.5a1.003 1.003 0 00-1.42 0l-1.13 1.13 2.5 2.5 1.13-1.13z\",fill:\"currentColor\"})})})]})}),/*#__PURE__*/_jsx(KanbanColumn,{columnId:col.id,title:col.title,cards:cards.filter(c=>c.status===col.id),onCardClick:card=>{if(card.hasSubBoard&&card.subBoardId){if(boardData&&boardData.depthLevel>=3){setShowDepthModal(true);}else{// Do nothing for now\n}}else{setSelectedCard(card);}},onMoveCard:handleMoveCard,onAddCard:title=>handleAddCard(col.id,title),isDragging:isDragging,setIsDragging:setIsDragging,isDraggingCard:isDraggingCard})]},col.id);}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col items-center justify-center min-w-[160px]\",children:/*#__PURE__*/_jsxs(\"button\",{ref:newColumnBtnRef,className:\"flex items-center gap-2 px-4 py-2 rounded border border-gray-200 bg-gray-50 text-gray-400 hover:text-accent hover:border-accent transition-colors focus:outline-accent focus:ring-2 focus:ring-accent/30 text-base font-medium mt-8 mb-2\",style:{minHeight:44},onClick:()=>setShowNewColumnModal(true),tabIndex:0,\"aria-label\":\"Add new column\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"20\",height:\"20\",fill:\"none\",viewBox:\"0 0 20 20\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"10\",cy:\"10\",r:\"9\",stroke:\"currentColor\",strokeWidth:\"2\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M10 6v8M6 10h8\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\"})]}),/*#__PURE__*/_jsx(\"span\",{children:\"New Column\"})]})}),/*#__PURE__*/_jsx(NewColumnModal,{open:showNewColumnModal,onClose:()=>setShowNewColumnModal(false),onCreate:name=>{if(!name.trim())return;// Generate unique id based on name and timestamp\nconst id=name.trim().replace(/\\s+/g,'-')+'-'+Date.now();setColumns(cols=>[...cols,{id,title:name.trim()}]);setShowNewColumnModal(false);setTimeout(()=>{var _newColumnBtnRef$curr;return(_newColumnBtnRef$curr=newColumnBtnRef.current)===null||_newColumnBtnRef$curr===void 0?void 0:_newColumnBtnRef$curr.focus();},100);}})]})}),selectedCard?/*#__PURE__*/_jsx(CardModal,{card:selectedCard,onClose:()=>setSelectedCard(null)}):null,/*#__PURE__*/_jsx(DepthLimitModal,{open:showDepthModal,onCancel:()=>setShowDepthModal(false),onConfirm:()=>setShowDepthModal(false)})]})});}export default KanbanBoard;","map":{"version":3,"names":["React","useState","useRef","DndContext","PointerSensor","useSensor","useSensors","closestCenter","KanbanColumn","NewColumnModal","RenameColumnInline","Breadcrumbs","DepthLimitModal","CardModal","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","dummyBoard","id","title","depthLevel","dummyColumns","dummyCards","boardId","description","status","pinned","hasSubBoard","KanbanBoard","boardData","columns","setColumns","cards","setCards","isDragging","setIsDragging","isDraggingCard","setIsDraggingCard","breadcrumbs","setBreadcrumbs","showDepthModal","setShowDepthModal","showNewColumnModal","setShowNewColumnModal","renamingColumnId","setRenamingColumnId","newColumnBtnRef","selectedCard","setSelectedCard","sensors","activationConstraint","distance","handleMoveCard","card","newStatus","c","map","x","handleAddCard","Date","now","handleDragEnd","event","active","over","cardId","some","find","collisionDetection","onDragStart","String","onDragEnd","children","className","path","style","scrollbarWidth","col","idx","isRenaming","value","onSave","name","trim","cols","onCancel","onClick","tabIndex","background","width","height","viewBox","fill","d","columnId","filter","onCardClick","subBoardId","onMoveCard","onAddCard","ref","minHeight","cx","cy","r","stroke","strokeWidth","strokeLinecap","open","onClose","onCreate","replace","setTimeout","_newColumnBtnRef$curr","current","focus","onConfirm"],"sources":["C:/Users/aikid/CascadeProjects/chalet-fractal-flow/src/components/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport {\n  DndContext,\n  PointerSensor,\n  useSensor,\n  useSensors,\n  closestCenter,\n  DragEndEvent\n} from '@dnd-kit/core';\n\nimport KanbanColumn from './KanbanColumn';\nimport NewColumnModal from './NewColumnModal';\nimport RenameColumnInline from './RenameColumnInline';\nimport Breadcrumbs from './Breadcrumbs';\nimport DepthLimitModal from './DepthLimitModal';\nimport CardModal from './CardModal';\nimport LoadingScreen from './LoadingScreen';\n\nexport interface CardData {\n  id: string;\n  boardId: string;\n  title: string;\n  description: string;\n  status: string;\n  pinned: boolean;\n  dueDate?: string;\n  hasSubBoard: boolean;\n  subBoardId?: string;\n  color?: string; // pastel color key\n}\n\nexport interface BoardState {\n  id: string;\n  title: string;\n  parentBoardId?: string;\n  depthLevel: number;\n}\n\nconst dummyBoard: BoardState = { id: 'board-1', title: 'My Test Board', depthLevel: 0 };\nconst dummyColumns: Array<{ id: string; title: string }> = [\n  { id: 'Ideas', title: 'Ideas' },\n  { id: 'In Progress', title: 'In Progress' },\n  { id: 'Completed', title: 'Completed' },\n];\nconst dummyCards: CardData[] = [\n  { id: 'card-1', boardId: 'board-1', title: 'First Idea', description: '', status: 'Ideas', pinned: false, hasSubBoard: false },\n  { id: 'card-2', boardId: 'board-1', title: 'Doing This Now', description: '', status: 'In Progress', pinned: true, hasSubBoard: false },\n  { id: 'card-3', boardId: 'board-1', title: 'Done!', description: '', status: 'Completed', pinned: false, hasSubBoard: false },\n];\n\nfunction KanbanBoard() {\n  // Use dummy data instead of Firestore\n  const [boardData] = useState<BoardState>(dummyBoard);\n  const [columns, setColumns] = useState(dummyColumns);\n  const [cards, setCards] = useState<CardData[]>(dummyCards);\n  // UI state\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDraggingCard, setIsDraggingCard] = useState<string | null>(null);\n  const [breadcrumbs, setBreadcrumbs] = useState<BoardState[]>([dummyBoard]);\n  const [showDepthModal, setShowDepthModal] = useState(false);\n  const [showNewColumnModal, setShowNewColumnModal] = useState(false);\n  const [renamingColumnId, setRenamingColumnId] = useState<string | null>(null);\n  const newColumnBtnRef = useRef<HTMLButtonElement>(null);\n  const [selectedCard, setSelectedCard] = useState<CardData | null>(null);\n\n  // Override drag sensors (no change)\n  const sensors = useSensors(\n    useSensor(PointerSensor, { activationConstraint: { distance: 5 } })\n  );\n\n  // Handlers operate on local dummy state\n  const handleMoveCard = (card: CardData, newStatus: string) => {\n    setCards(c => c.map(x => x.id === card.id ? { ...x, status: newStatus } : x));\n  };\n  const handleAddCard = (status: string, title: string) => {\n    const id = `card-${Date.now()}`;\n    setCards(c => [...c, { id, boardId: dummyBoard.id, title, description: '', status, pinned: false, hasSubBoard: false }]);\n  };\n\n  // Handle drag end: update local state\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event;\n    if (!over) return;\n    const newStatus = over.id as string;\n    const cardId = active.id as string;\n    if (columns.some((c) => c.id === newStatus)) {\n      const card = cards.find((c) => c.id === cardId);\n      if (card && card.status !== newStatus) {\n        handleMoveCard(card, newStatus);\n      }\n    }\n  };\n\n  // No loading guard needed: dummy data is always present\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={event => {\n        setIsDragging(true);\n        if (event && event.active && event.active.id) {\n          setIsDraggingCard(String(event.active.id));\n        }\n      }}\n      onDragEnd={event => {\n        setIsDragging(false);\n        setIsDraggingCard(null);\n        handleDragEnd(event);\n      }}\n    >\n      <div className=\"bg-background rounded-xl shadow-card p-6\">\n        <Breadcrumbs path={breadcrumbs} />\n        <div className=\"w-full overflow-x-auto pb-4\">\n          <div className=\"flex gap-6 flex-nowrap justify-center mx-auto min-w-fit\" style={{scrollbarWidth: 'thin'}}>\n\n            {columns.map((col: { id: string; title: string }, idx: number) => {\n              const isRenaming = renamingColumnId === col.id;\n              return (\n                <div key={col.id} className=\"flex flex-col items-stretch\">\n                  <div className=\"flex items-center gap-1 mb-1\">\n                    {isRenaming ? (\n                      <RenameColumnInline\n                        value={col.title}\n                        onSave={(name: string) => {\n                          if (!name.trim()) return;\n                          setColumns(cols => cols.map(c => c.id === col.id ? { ...c, title: name.trim() } : c));\n                          setRenamingColumnId(null);\n                        }}\n                        onCancel={() => setRenamingColumnId(null)}\n                      />\n                    ) : (\n                      <>\n                        <button\n                          className=\"text-lg font-semibold text-gray-800 bg-transparent border-none px-0 py-0 cursor-pointer hover:underline focus:outline-accent\"\n                          onClick={() => setRenamingColumnId(col.id)}\n                          tabIndex={0}\n                          aria-label={`Rename column ${col.title}`}\n                          style={{ background: 'none' }}\n                        >\n                          {col.title}\n                        </button>\n                        <button\n                          className=\"ml-1 text-gray-400 hover:text-accent focus:text-accent p-0.5 rounded focus:outline-accent\"\n                          onClick={() => setRenamingColumnId(col.id)}\n                          tabIndex={0}\n                          aria-label={`Edit column ${col.title}`}\n                          style={{ background: 'none' }}\n                        >\n                          <svg width=\"16\" height=\"16\" viewBox=\"0 0 20 20\" fill=\"none\"><path d=\"M4 13.5V16h2.5l7.06-7.06-2.5-2.5L4 13.5zm10.71-6.29c.19-.19.29-.44.29-.71s-.1-.52-.29-.71l-1.5-1.5a1.003 1.003 0 00-1.42 0l-1.13 1.13 2.5 2.5 1.13-1.13z\" fill=\"currentColor\"/></svg>\n                        </button>\n                      </>\n                    )}\n                  </div>\n                  <KanbanColumn\n                    columnId={col.id}\n                    title={col.title}\n                    cards={cards.filter((c: CardData) => c.status === col.id)}\n                    onCardClick={(card: CardData) => {\n                      if (card.hasSubBoard && card.subBoardId) {\n                        if (boardData && boardData.depthLevel >= 3) {\n                          setShowDepthModal(true);\n                        } else {\n                          // Do nothing for now\n                        }\n                      } else {\n                        setSelectedCard(card);\n                      }\n                    }}\n                    onMoveCard={handleMoveCard}\n                    onAddCard={(title: string) => handleAddCard(col.id, title)}\n                    isDragging={isDragging}\n                    setIsDragging={setIsDragging}\n                    isDraggingCard={isDraggingCard}\n                  />\n                </div>\n              );\n            })}\n            {/* New Column Button */}\n            <div className=\"flex flex-col items-center justify-center min-w-[160px]\">\n              <button\n                ref={newColumnBtnRef}\n                className=\"flex items-center gap-2 px-4 py-2 rounded border border-gray-200 bg-gray-50 text-gray-400 hover:text-accent hover:border-accent transition-colors focus:outline-accent focus:ring-2 focus:ring-accent/30 text-base font-medium mt-8 mb-2\"\n                style={{ minHeight: 44 }}\n                onClick={() => setShowNewColumnModal(true)}\n                tabIndex={0}\n                aria-label=\"Add new column\"\n              >\n                <svg width=\"20\" height=\"20\" fill=\"none\" viewBox=\"0 0 20 20\"><circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"currentColor\" strokeWidth=\"2\"/><path d=\"M10 6v8M6 10h8\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/></svg>\n                <span>New Column</span>\n              </button>\n            </div>\n            {/* Modal for new column */}\n            <NewColumnModal\n              open={showNewColumnModal}\n              onClose={() => setShowNewColumnModal(false)}\n              onCreate={(name: string) => {\n                if (!name.trim()) return;\n                // Generate unique id based on name and timestamp\n                const id = name.trim().replace(/\\s+/g, '-') + '-' + Date.now();\n                setColumns(cols => [...cols, { id, title: name.trim() }]);\n                setShowNewColumnModal(false);\n                setTimeout(() => newColumnBtnRef.current?.focus(), 100);\n              }}\n            />\n          </div>\n        </div>\n        {selectedCard ? (\n          <CardModal card={selectedCard} onClose={() => setSelectedCard(null)} />\n        ) : null}\n        <DepthLimitModal\n          open={showDepthModal}\n          onCancel={() => setShowDepthModal(false)}\n          onConfirm={() => setShowDepthModal(false)}\n        />\n      </div>\n    </DndContext>\n  );\n}\n\nexport default KanbanBoard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAaC,MAAM,KAAoB,OAAO,CACtE,OACEC,UAAU,CACVC,aAAa,CACbC,SAAS,CACTC,UAAU,CACVC,aAAa,KAER,eAAe,CAEtB,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,kBAAkB,KAAM,sBAAsB,CACrD,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,SAAS,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAuBpC,KAAM,CAAAC,UAAsB,CAAG,CAAEC,EAAE,CAAE,SAAS,CAAEC,KAAK,CAAE,eAAe,CAAEC,UAAU,CAAE,CAAE,CAAC,CACvF,KAAM,CAAAC,YAAkD,CAAG,CACzD,CAAEH,EAAE,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAC/B,CAAED,EAAE,CAAE,aAAa,CAAEC,KAAK,CAAE,aAAc,CAAC,CAC3C,CAAED,EAAE,CAAE,WAAW,CAAEC,KAAK,CAAE,WAAY,CAAC,CACxC,CACD,KAAM,CAAAG,UAAsB,CAAG,CAC7B,CAAEJ,EAAE,CAAE,QAAQ,CAAEK,OAAO,CAAE,SAAS,CAAEJ,KAAK,CAAE,YAAY,CAAEK,WAAW,CAAE,EAAE,CAAEC,MAAM,CAAE,OAAO,CAAEC,MAAM,CAAE,KAAK,CAAEC,WAAW,CAAE,KAAM,CAAC,CAC9H,CAAET,EAAE,CAAE,QAAQ,CAAEK,OAAO,CAAE,SAAS,CAAEJ,KAAK,CAAE,gBAAgB,CAAEK,WAAW,CAAE,EAAE,CAAEC,MAAM,CAAE,aAAa,CAAEC,MAAM,CAAE,IAAI,CAAEC,WAAW,CAAE,KAAM,CAAC,CACvI,CAAET,EAAE,CAAE,QAAQ,CAAEK,OAAO,CAAE,SAAS,CAAEJ,KAAK,CAAE,OAAO,CAAEK,WAAW,CAAE,EAAE,CAAEC,MAAM,CAAE,WAAW,CAAEC,MAAM,CAAE,KAAK,CAAEC,WAAW,CAAE,KAAM,CAAC,CAC9H,CAED,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB;AACA,KAAM,CAACC,SAAS,CAAC,CAAG/B,QAAQ,CAAamB,UAAU,CAAC,CACpD,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGjC,QAAQ,CAACuB,YAAY,CAAC,CACpD,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGnC,QAAQ,CAAawB,UAAU,CAAC,CAC1D;AACA,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACsC,cAAc,CAAEC,iBAAiB,CAAC,CAAGvC,QAAQ,CAAgB,IAAI,CAAC,CACzE,KAAM,CAACwC,WAAW,CAAEC,cAAc,CAAC,CAAGzC,QAAQ,CAAe,CAACmB,UAAU,CAAC,CAAC,CAC1E,KAAM,CAACuB,cAAc,CAAEC,iBAAiB,CAAC,CAAG3C,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAAC4C,kBAAkB,CAAEC,qBAAqB,CAAC,CAAG7C,QAAQ,CAAC,KAAK,CAAC,CACnE,KAAM,CAAC8C,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG/C,QAAQ,CAAgB,IAAI,CAAC,CAC7E,KAAM,CAAAgD,eAAe,CAAG/C,MAAM,CAAoB,IAAI,CAAC,CACvD,KAAM,CAACgD,YAAY,CAAEC,eAAe,CAAC,CAAGlD,QAAQ,CAAkB,IAAI,CAAC,CAEvE;AACA,KAAM,CAAAmD,OAAO,CAAG9C,UAAU,CACxBD,SAAS,CAACD,aAAa,CAAE,CAAEiD,oBAAoB,CAAE,CAAEC,QAAQ,CAAE,CAAE,CAAE,CAAC,CACpE,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAGA,CAACC,IAAc,CAAEC,SAAiB,GAAK,CAC5DrB,QAAQ,CAACsB,CAAC,EAAIA,CAAC,CAACC,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACvC,EAAE,GAAKmC,IAAI,CAACnC,EAAE,CAAG,CAAE,GAAGuC,CAAC,CAAEhC,MAAM,CAAE6B,SAAU,CAAC,CAAGG,CAAC,CAAC,CAAC,CAC/E,CAAC,CACD,KAAM,CAAAC,aAAa,CAAGA,CAACjC,MAAc,CAAEN,KAAa,GAAK,CACvD,KAAM,CAAAD,EAAE,CAAG,QAAQyC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAC/B3B,QAAQ,CAACsB,CAAC,EAAI,CAAC,GAAGA,CAAC,CAAE,CAAErC,EAAE,CAAEK,OAAO,CAAEN,UAAU,CAACC,EAAE,CAAEC,KAAK,CAAEK,WAAW,CAAE,EAAE,CAAEC,MAAM,CAAEC,MAAM,CAAE,KAAK,CAAEC,WAAW,CAAE,KAAM,CAAC,CAAC,CAAC,CAC1H,CAAC,CAED;AACA,KAAM,CAAAkC,aAAa,CAAIC,KAAmB,EAAK,CAC7C,KAAM,CAAEC,MAAM,CAAEC,IAAK,CAAC,CAAGF,KAAK,CAC9B,GAAI,CAACE,IAAI,CAAE,OACX,KAAM,CAAAV,SAAS,CAAGU,IAAI,CAAC9C,EAAY,CACnC,KAAM,CAAA+C,MAAM,CAAGF,MAAM,CAAC7C,EAAY,CAClC,GAAIY,OAAO,CAACoC,IAAI,CAAEX,CAAC,EAAKA,CAAC,CAACrC,EAAE,GAAKoC,SAAS,CAAC,CAAE,CAC3C,KAAM,CAAAD,IAAI,CAAGrB,KAAK,CAACmC,IAAI,CAAEZ,CAAC,EAAKA,CAAC,CAACrC,EAAE,GAAK+C,MAAM,CAAC,CAC/C,GAAIZ,IAAI,EAAIA,IAAI,CAAC5B,MAAM,GAAK6B,SAAS,CAAE,CACrCF,cAAc,CAACC,IAAI,CAAEC,SAAS,CAAC,CACjC,CACF,CACF,CAAC,CAED;AACA,mBACE1C,IAAA,CAACZ,UAAU,EACTiD,OAAO,CAAEA,OAAQ,CACjBmB,kBAAkB,CAAEhE,aAAc,CAClCiE,WAAW,CAAEP,KAAK,EAAI,CACpB3B,aAAa,CAAC,IAAI,CAAC,CACnB,GAAI2B,KAAK,EAAIA,KAAK,CAACC,MAAM,EAAID,KAAK,CAACC,MAAM,CAAC7C,EAAE,CAAE,CAC5CmB,iBAAiB,CAACiC,MAAM,CAACR,KAAK,CAACC,MAAM,CAAC7C,EAAE,CAAC,CAAC,CAC5C,CACF,CAAE,CACFqD,SAAS,CAAET,KAAK,EAAI,CAClB3B,aAAa,CAAC,KAAK,CAAC,CACpBE,iBAAiB,CAAC,IAAI,CAAC,CACvBwB,aAAa,CAACC,KAAK,CAAC,CACtB,CAAE,CAAAU,QAAA,cAEFxD,KAAA,QAAKyD,SAAS,CAAC,0CAA0C,CAAAD,QAAA,eACvD5D,IAAA,CAACJ,WAAW,EAACkE,IAAI,CAAEpC,WAAY,CAAE,CAAC,cAClC1B,IAAA,QAAK6D,SAAS,CAAC,6BAA6B,CAAAD,QAAA,cAC1CxD,KAAA,QAAKyD,SAAS,CAAC,yDAAyD,CAACE,KAAK,CAAE,CAACC,cAAc,CAAE,MAAM,CAAE,CAAAJ,QAAA,EAEtG1C,OAAO,CAAC0B,GAAG,CAAC,CAACqB,GAAkC,CAAEC,GAAW,GAAK,CAChE,KAAM,CAAAC,UAAU,CAAGnC,gBAAgB,GAAKiC,GAAG,CAAC3D,EAAE,CAC9C,mBACEF,KAAA,QAAkByD,SAAS,CAAC,6BAA6B,CAAAD,QAAA,eACvD5D,IAAA,QAAK6D,SAAS,CAAC,8BAA8B,CAAAD,QAAA,CAC1CO,UAAU,cACTnE,IAAA,CAACL,kBAAkB,EACjByE,KAAK,CAAEH,GAAG,CAAC1D,KAAM,CACjB8D,MAAM,CAAGC,IAAY,EAAK,CACxB,GAAI,CAACA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAE,OAClBpD,UAAU,CAACqD,IAAI,EAAIA,IAAI,CAAC5B,GAAG,CAACD,CAAC,EAAIA,CAAC,CAACrC,EAAE,GAAK2D,GAAG,CAAC3D,EAAE,CAAG,CAAE,GAAGqC,CAAC,CAAEpC,KAAK,CAAE+D,IAAI,CAACC,IAAI,CAAC,CAAE,CAAC,CAAG5B,CAAC,CAAC,CAAC,CACrFV,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAE,CACFwC,QAAQ,CAAEA,CAAA,GAAMxC,mBAAmB,CAAC,IAAI,CAAE,CAC3C,CAAC,cAEF7B,KAAA,CAAAF,SAAA,EAAA0D,QAAA,eACE5D,IAAA,WACE6D,SAAS,CAAC,8HAA8H,CACxIa,OAAO,CAAEA,CAAA,GAAMzC,mBAAmB,CAACgC,GAAG,CAAC3D,EAAE,CAAE,CAC3CqE,QAAQ,CAAE,CAAE,CACZ,aAAY,iBAAiBV,GAAG,CAAC1D,KAAK,EAAG,CACzCwD,KAAK,CAAE,CAAEa,UAAU,CAAE,MAAO,CAAE,CAAAhB,QAAA,CAE7BK,GAAG,CAAC1D,KAAK,CACJ,CAAC,cACTP,IAAA,WACE6D,SAAS,CAAC,2FAA2F,CACrGa,OAAO,CAAEA,CAAA,GAAMzC,mBAAmB,CAACgC,GAAG,CAAC3D,EAAE,CAAE,CAC3CqE,QAAQ,CAAE,CAAE,CACZ,aAAY,eAAeV,GAAG,CAAC1D,KAAK,EAAG,CACvCwD,KAAK,CAAE,CAAEa,UAAU,CAAE,MAAO,CAAE,CAAAhB,QAAA,cAE9B5D,IAAA,QAAK6E,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACC,OAAO,CAAC,WAAW,CAACC,IAAI,CAAC,MAAM,CAAApB,QAAA,cAAC5D,IAAA,SAAMiF,CAAC,CAAC,0JAA0J,CAACD,IAAI,CAAC,cAAc,CAAC,CAAC,CAAK,CAAC,CACpP,CAAC,EACT,CACH,CACE,CAAC,cACNhF,IAAA,CAACP,YAAY,EACXyF,QAAQ,CAAEjB,GAAG,CAAC3D,EAAG,CACjBC,KAAK,CAAE0D,GAAG,CAAC1D,KAAM,CACjBa,KAAK,CAAEA,KAAK,CAAC+D,MAAM,CAAExC,CAAW,EAAKA,CAAC,CAAC9B,MAAM,GAAKoD,GAAG,CAAC3D,EAAE,CAAE,CAC1D8E,WAAW,CAAG3C,IAAc,EAAK,CAC/B,GAAIA,IAAI,CAAC1B,WAAW,EAAI0B,IAAI,CAAC4C,UAAU,CAAE,CACvC,GAAIpE,SAAS,EAAIA,SAAS,CAACT,UAAU,EAAI,CAAC,CAAE,CAC1CqB,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,IAAM,CACL;AAAA,CAEJ,CAAC,IAAM,CACLO,eAAe,CAACK,IAAI,CAAC,CACvB,CACF,CAAE,CACF6C,UAAU,CAAE9C,cAAe,CAC3B+C,SAAS,CAAGhF,KAAa,EAAKuC,aAAa,CAACmB,GAAG,CAAC3D,EAAE,CAAEC,KAAK,CAAE,CAC3De,UAAU,CAAEA,UAAW,CACvBC,aAAa,CAAEA,aAAc,CAC7BC,cAAc,CAAEA,cAAe,CAChC,CAAC,GAvDMyC,GAAG,CAAC3D,EAwDT,CAAC,CAEV,CAAC,CAAC,cAEFN,IAAA,QAAK6D,SAAS,CAAC,yDAAyD,CAAAD,QAAA,cACtExD,KAAA,WACEoF,GAAG,CAAEtD,eAAgB,CACrB2B,SAAS,CAAC,0OAA0O,CACpPE,KAAK,CAAE,CAAE0B,SAAS,CAAE,EAAG,CAAE,CACzBf,OAAO,CAAEA,CAAA,GAAM3C,qBAAqB,CAAC,IAAI,CAAE,CAC3C4C,QAAQ,CAAE,CAAE,CACZ,aAAW,gBAAgB,CAAAf,QAAA,eAE3BxD,KAAA,QAAKyE,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACE,IAAI,CAAC,MAAM,CAACD,OAAO,CAAC,WAAW,CAAAnB,QAAA,eAAC5D,IAAA,WAAQ0F,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,CAAC,CAAC,GAAG,CAACC,MAAM,CAAC,cAAc,CAACC,WAAW,CAAC,GAAG,CAAC,CAAC,cAAA9F,IAAA,SAAMiF,CAAC,CAAC,gBAAgB,CAACY,MAAM,CAAC,cAAc,CAACC,WAAW,CAAC,GAAG,CAACC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAK,CAAC,cAC7N/F,IAAA,SAAA4D,QAAA,CAAM,YAAU,CAAM,CAAC,EACjB,CAAC,CACN,CAAC,cAEN5D,IAAA,CAACN,cAAc,EACbsG,IAAI,CAAElE,kBAAmB,CACzBmE,OAAO,CAAEA,CAAA,GAAMlE,qBAAqB,CAAC,KAAK,CAAE,CAC5CmE,QAAQ,CAAG5B,IAAY,EAAK,CAC1B,GAAI,CAACA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAE,OAClB;AACA,KAAM,CAAAjE,EAAE,CAAGgE,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC4B,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CAAG,GAAG,CAAGpD,IAAI,CAACC,GAAG,CAAC,CAAC,CAC9D7B,UAAU,CAACqD,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAAElE,EAAE,CAAEC,KAAK,CAAE+D,IAAI,CAACC,IAAI,CAAC,CAAE,CAAC,CAAC,CAAC,CACzDxC,qBAAqB,CAAC,KAAK,CAAC,CAC5BqE,UAAU,CAAC,SAAAC,qBAAA,QAAAA,qBAAA,CAAMnE,eAAe,CAACoE,OAAO,UAAAD,qBAAA,iBAAvBA,qBAAA,CAAyBE,KAAK,CAAC,CAAC,GAAE,GAAG,CAAC,CACzD,CAAE,CACH,CAAC,EACC,CAAC,CACH,CAAC,CACLpE,YAAY,cACXnC,IAAA,CAACF,SAAS,EAAC2C,IAAI,CAAEN,YAAa,CAAC8D,OAAO,CAAEA,CAAA,GAAM7D,eAAe,CAAC,IAAI,CAAE,CAAE,CAAC,CACrE,IAAI,cACRpC,IAAA,CAACH,eAAe,EACdmG,IAAI,CAAEpE,cAAe,CACrB6C,QAAQ,CAAEA,CAAA,GAAM5C,iBAAiB,CAAC,KAAK,CAAE,CACzC2E,SAAS,CAAEA,CAAA,GAAM3E,iBAAiB,CAAC,KAAK,CAAE,CAC3C,CAAC,EACC,CAAC,CACI,CAAC,CAEjB,CAEA,cAAe,CAAAb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}